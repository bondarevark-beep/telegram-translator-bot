import os
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters
from googletrans import Translator

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN")
translator = Translator()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
async def start(update: Update, context):
    await update.message.reply_text("üî† –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç!")

async def translate(update: Update, context):
    text = update.message.text
    try:
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å)
        result = translator.translate(text, dest='en')
        await update.message.reply_text(f"üåç –ü–µ—Ä–µ–≤–æ–¥:\n{result.text}")
    except Exception as e:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞")

async def meme_translate(update: Update, context):
    text = update.message.text.replace("/meme", "").strip()
    if not text:
        await update.message.reply_text("–ü—Ä–∏–º–µ—Ä: /meme –ü—Ä–∏–≤–µ—Ç")
        return
    
    # –ü—Ä–æ—Å—Ç–µ–π—à–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–º-–ø–µ—Ä–µ–≤–æ–¥–∞
    memes = {
        "cat": f"üê± –ú—è—É! {text} *–º—É—Ä-–º—É—Ä*",
        "pirate": f"‚ò†Ô∏è –ô–æ-—Ö–æ-—Ö–æ! {text}, —Å–æ–±–∞–∫–∞!",
        "academic": f"–°–æ–≥–ª–∞—Å–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º, '{text}' –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π..."
    }
    
    await update.message.reply_text(memes["cat"])  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–æ—Ç

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("meme", meme_translate))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, translate))
    
    app.run_polling()

if __name__ == "__main__":
    main()